import { useState } from 'react';
import EvidenceManager from './EvidenceManager';

export default function VulnerabilityForm({ initialData = {}, onSubmit, onCancel }) {
  const [form, setForm] = useState({
    nombre: '',
    tipo: '',
    riesgo: 'Bajo',
    fecha: new Date().toISOString().slice(0, 10),
    descripcion: '',
    soluciones: '',
    gravedad: '',
    categoria: '',
    recomendaciones: '',
    evidencias: [],
    evidenciaPrincipal: null,
    ...initialData
  });

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    const dataToSubmit = {
      ...form,
      soluciones: form.soluciones.split(',').map(s => s.trim()).filter(s => s)
    };
    
    onSubmit(dataToSubmit);
  };

  return (
    <form onSubmit={handleSubmit} className="vuln-form">
      <div className="form-grid">
        {/* Sección de información básica */}
        <div className="form-group">
          <label>Nombre</label>
          <input 
            name="nombre" 
            value={form.nombre} 
            onChange={handleChange} 
            required 
          />
        </div>

        <div className="form-group">
          <label>Tipo</label>
          <input 
            name="tipo" 
            value={form.tipo} 
            onChange={handleChange} 
            required 
          />
        </div>

        <div className="form-group">
          <label>Nivel de riesgo</label>
          <select name="riesgo" value={form.riesgo} onChange={handleChange}>
            <option value="Bajo">Bajo</option>
            <option value="Medio">Medio</option>
            <option value="Alto">Alto</option>
            <option value="Crítico">Crítico</option>
          </select>
        </div>

        <div className="form-group">
          <label>Fecha</label>
          <input 
            type="date" 
            name="fecha" 
            value={form.fecha} 
            onChange={handleChange} 
          />
        </div>

        <div className="form-group">
          <label>Gravedad</label>
          <input 
            name="gravedad" 
            value={form.gravedad} 
            onChange={handleChange} 
          />
        </div>

        <div className="form-group">
          <label>Categoría</label>
          <input 
            name="categoria" 
            value={form.categoria} 
            onChange={handleChange} 
          />
        </div>

        {/* Sección de descripción técnica */}
        <div className="form-group full-width">
          <label>Descripción técnica</label>
          <textarea 
            name="descripcion" 
            value={form.descripcion} 
            onChange={handleChange} 
            rows="4"
          />
        </div>

        {/* Sección de soluciones */}
        <div className="form-group full-width">
          <label>Soluciones (separar por comas)</label>
          <input 
            name="soluciones" 
            value={form.soluciones} 
            onChange={handleChange} 
            placeholder="Ej: Parámetros preparados, Validación de entrada"
          />
        </div>

        {/* Sección de recomendaciones */}
        <div className="form-group full-width">
          <label>Recomendaciones</label>
          <textarea 
            name="recomendaciones" 
            value={form.recomendaciones} 
            onChange={handleChange} 
            rows="3"
          />
        </div>

        {/* Gestor de Evidencias */}
        <div className="form-group full-width">
          <label>Evidencias</label>
          <EvidenceManager 
            vuln={form}
            updateVuln={(updates) => setForm({...form, ...updates})}
          />
        </div>
      </div>

      <div className="form-actions">
        <button type="submit" className="btn-primary">
          {initialData.id ? 'Actualizar' : 'Guardar'}
        </button>
        {onCancel && (
          <button type="button" className="btn-glass" onClick={onCancel}>
            Cancelar
          </button>
        )}
      </div>
    </form>
  );
}